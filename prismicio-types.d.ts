// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from '@prismicio/client';

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type PickContentRelationshipFieldData<
  TRelationship extends
    | prismic.CustomTypeModelFetchCustomTypeLevel1
    | prismic.CustomTypeModelFetchCustomTypeLevel2
    | prismic.CustomTypeModelFetchGroupLevel1
    | prismic.CustomTypeModelFetchGroupLevel2,
  TData extends Record<
    string,
    prismic.AnyRegularField | prismic.GroupField | prismic.NestedGroupField | prismic.SliceZone
  >,
  TLang extends string,
> =
  // Content relationship fields
  {
    [TSubRelationship in Extract<
      TRelationship['fields'][number],
      prismic.CustomTypeModelFetchContentRelationshipLevel1
    > as TSubRelationship['id']]: ContentRelationshipFieldWithData<TSubRelationship['customtypes'], TLang>;
  } & {
    // Group
    [TGroup in Extract<
      TRelationship['fields'][number],
      prismic.CustomTypeModelFetchGroupLevel1 | prismic.CustomTypeModelFetchGroupLevel2
    > as TGroup['id']]: TData[TGroup['id']] extends prismic.GroupField<infer TGroupData>
      ? prismic.GroupField<PickContentRelationshipFieldData<TGroup, TGroupData, TLang>>
      : never;
  } & {
    // Other fields
    [TFieldKey in Extract<TRelationship['fields'][number], string>]: TFieldKey extends keyof TData
      ? TData[TFieldKey]
      : never;
  };

type ContentRelationshipFieldWithData<
  TCustomType extends
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel1 | string)[]
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel2 | string)[],
  TLang extends string = string,
> = {
  [ID in Exclude<TCustomType[number], string>['id']]: prismic.ContentRelationshipField<
    ID,
    TLang,
    PickContentRelationshipFieldData<
      Extract<TCustomType[number], { id: ID }>,
      Extract<prismic.Content.AllDocumentTypes, { type: ID }>['data'],
      TLang
    >
  >;
}[Exclude<TCustomType[number], string>['id']];

/**
 * Content for Event documents
 */
interface EventDocumentData {
  /**
   * Layout field in *Event*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Layout
   * - **API ID Path**: event.layout
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/select
   */
  layout: prismic.SelectField<'1' | '2' | '3'>;

  /**
   * Titel 1 field in *Event*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Titel 1
   * - **API ID Path**: event.title1
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title1: prismic.RichTextField;

  /**
   * Titel 2 field in *Event*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Titel 2
   * - **API ID Path**: event.title2
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title2: prismic.RichTextField;

  /**
   * Text field in *Event*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Text
   * - **API ID Path**: event.text
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  text: prismic.RichTextField;

  /**
   * Datum field in *Event*
   *
   * - **Field Type**: Date
   * - **Placeholder**: *None*
   * - **API ID Path**: event.date
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/date
   */
  date: prismic.DateField;

  /**
   * Link field in *Event*
   *
   * - **Field Type**: Link
   * - **Placeholder**: Link
   * - **API ID Path**: event.link
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  link: prismic.LinkField<string, string, unknown, prismic.FieldState, never>;

  /**
   * Hintergrundbild field in *Event*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: event.background_image
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  background_image: prismic.ImageField<never>;
}

/**
 * Event document from Prismic
 *
 * - **API ID**: `event`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type EventDocument<Lang extends string = string> = prismic.PrismicDocumentWithUID<
  Simplify<EventDocumentData>,
  'event',
  Lang
>;

export type AllDocumentTypes = EventDocument;

declare module '@prismicio/client' {
  interface CreateClient {
    (repositoryNameOrEndpoint: string, options?: prismic.ClientConfig): prismic.Client<AllDocumentTypes>;
  }

  interface CreateWriteClient {
    (repositoryNameOrEndpoint: string, options: prismic.WriteClientConfig): prismic.WriteClient<AllDocumentTypes>;
  }

  interface CreateMigration {
    (): prismic.Migration<AllDocumentTypes>;
  }

  namespace Content {
    export type { EventDocument, EventDocumentData, AllDocumentTypes };
  }
}
